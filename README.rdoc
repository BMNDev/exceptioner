= Exceptioner 

Be notified about exceptions by various transports Email, Jabber, IRC, etc. Choose the option you want.

The most common use is to use Exceptioner as rack middleware and send notifications when an exception occur in you web application. It may be used with Rails, Sinatra or any other rack citizen. 
Exceptioner may be also used with any ruby code you want. Just configure delivery methods and don't miss any exception.

= Currently available delivery methods
* Email - BETA
* Jabber/XMPP - ALPHA

= Usage 

Note: Exceptioner is under heavy development and it is not recommended to use for
production applications.

== Rails 3 users

Add to your Gemfile 
    gem 'exceptioner'

and obviously run bundle install

Then copy config file to your application
    rails generate exceptioner:install.

You probably want to check config/initializers/exceptioner.rb and customize it a bit

== Rails 2.X users

    NEED SUPPORT

== Any Rack application users

    gem install exceptioner

Then require exceptioner and add Exceptioner::Middleware to your stack

== Any Ruby application users

    gem install exceptioner

Then require excptioner and use it like:
    
    begin 
        # some code which may fail
    rescue VeryFatalError => e
        Exceptioner::Notifier.dispatch(e)
    end    

== Note on Patches/Pull Requests
 
* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Copyright

Copyright (c) 2010 Michał Łomnicki. See LICENSE for details.
